
AlarmClock.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000039a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000010  00800060  0000039a  0000040e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000041e  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000450  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000058  00000000  00000000  0000048c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000a7c  00000000  00000000  000004e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000068a  00000000  00000000  00000f60  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000005a8  00000000  00000000  000015ea  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000a8  00000000  00000000  00001b94  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000039e  00000000  00000000  00001c3c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000004a5  00000000  00000000  00001fda  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000048  00000000  00000000  0000247f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ea e9       	ldi	r30, 0x9A	; 154
  68:	f3 e0       	ldi	r31, 0x03	; 3
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 37       	cpi	r26, 0x70	; 112
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 c2 01 	call	0x384	; 0x384 <main>
  7a:	0c 94 cb 01 	jmp	0x396	; 0x396 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <keypad_init>:
		LCD_Char(str[i]);
	}
}
void clear(void)
{
	LCD_Command(0x01);
  82:	81 b3       	in	r24, 0x11	; 17
  84:	8f 77       	andi	r24, 0x7F	; 127
  86:	81 bb       	out	0x11, r24	; 17
  88:	81 b3       	in	r24, 0x11	; 17
  8a:	8f 7b       	andi	r24, 0xBF	; 191
  8c:	81 bb       	out	0x11, r24	; 17
  8e:	81 b3       	in	r24, 0x11	; 17
  90:	8f 7d       	andi	r24, 0xDF	; 223
  92:	81 bb       	out	0x11, r24	; 17
  94:	81 b3       	in	r24, 0x11	; 17
  96:	87 7f       	andi	r24, 0xF7	; 247
  98:	81 bb       	out	0x11, r24	; 17
  9a:	84 b3       	in	r24, 0x14	; 20
  9c:	80 62       	ori	r24, 0x20	; 32
  9e:	84 bb       	out	0x14, r24	; 20
  a0:	84 b3       	in	r24, 0x14	; 20
  a2:	80 61       	ori	r24, 0x10	; 16
  a4:	84 bb       	out	0x14, r24	; 20
  a6:	84 b3       	in	r24, 0x14	; 20
  a8:	88 60       	ori	r24, 0x08	; 8
  aa:	84 bb       	out	0x14, r24	; 20
  ac:	84 b3       	in	r24, 0x14	; 20
  ae:	84 60       	ori	r24, 0x04	; 4
  b0:	84 bb       	out	0x14, r24	; 20
  b2:	82 b3       	in	r24, 0x12	; 18
  b4:	80 68       	ori	r24, 0x80	; 128
  b6:	82 bb       	out	0x12, r24	; 18
  b8:	82 b3       	in	r24, 0x12	; 18
  ba:	80 64       	ori	r24, 0x40	; 64
  bc:	82 bb       	out	0x12, r24	; 18
  be:	82 b3       	in	r24, 0x12	; 18
  c0:	80 62       	ori	r24, 0x20	; 32
  c2:	82 bb       	out	0x12, r24	; 18
  c4:	82 b3       	in	r24, 0x12	; 18
  c6:	88 60       	ori	r24, 0x08	; 8
  c8:	82 bb       	out	0x12, r24	; 18
  ca:	08 95       	ret

000000cc <keypad_Get_Value>:
  cc:	ef ef       	ldi	r30, 0xFF	; 255
  ce:	95 e0       	ldi	r25, 0x05	; 5
  d0:	61 c0       	rjmp	.+194    	; 0x194 <keypad_Get_Value+0xc8>
  d2:	85 b3       	in	r24, 0x15	; 21
  d4:	8c 63       	ori	r24, 0x3C	; 60
  d6:	85 bb       	out	0x15, r24	; 21
  d8:	85 b3       	in	r24, 0x15	; 21
  da:	69 2f       	mov	r22, r25
  dc:	70 e0       	ldi	r23, 0x00	; 0
  de:	21 e0       	ldi	r18, 0x01	; 1
  e0:	30 e0       	ldi	r19, 0x00	; 0
  e2:	09 2e       	mov	r0, r25
  e4:	02 c0       	rjmp	.+4      	; 0xea <keypad_Get_Value+0x1e>
  e6:	22 0f       	add	r18, r18
  e8:	33 1f       	adc	r19, r19
  ea:	0a 94       	dec	r0
  ec:	e2 f7       	brpl	.-8      	; 0xe6 <keypad_Get_Value+0x1a>
  ee:	20 95       	com	r18
  f0:	28 23       	and	r18, r24
  f2:	25 bb       	out	0x15, r18	; 21
  f4:	87 e0       	ldi	r24, 0x07	; 7
  f6:	4a c0       	rjmp	.+148    	; 0x18c <keypad_Get_Value+0xc0>
  f8:	84 30       	cpi	r24, 0x04	; 4
  fa:	09 f4       	brne	.+2      	; 0xfe <keypad_Get_Value+0x32>
  fc:	81 50       	subi	r24, 0x01	; 1
  fe:	20 b3       	in	r18, 0x10	; 16
 100:	48 2f       	mov	r20, r24
 102:	50 e0       	ldi	r21, 0x00	; 0
 104:	30 e0       	ldi	r19, 0x00	; 0
 106:	08 2e       	mov	r0, r24
 108:	02 c0       	rjmp	.+4      	; 0x10e <keypad_Get_Value+0x42>
 10a:	35 95       	asr	r19
 10c:	27 95       	ror	r18
 10e:	0a 94       	dec	r0
 110:	e2 f7       	brpl	.-8      	; 0x10a <keypad_Get_Value+0x3e>
 112:	20 fd       	sbrc	r18, 0
 114:	3a c0       	rjmp	.+116    	; 0x18a <keypad_Get_Value+0xbe>
 116:	af e2       	ldi	r26, 0x2F	; 47
 118:	b5 e7       	ldi	r27, 0x75	; 117
 11a:	11 97       	sbiw	r26, 0x01	; 1
 11c:	f1 f7       	brne	.-4      	; 0x11a <keypad_Get_Value+0x4e>
 11e:	00 c0       	rjmp	.+0      	; 0x120 <keypad_Get_Value+0x54>
 120:	00 00       	nop
 122:	20 b3       	in	r18, 0x10	; 16
 124:	30 e0       	ldi	r19, 0x00	; 0
 126:	08 2e       	mov	r0, r24
 128:	02 c0       	rjmp	.+4      	; 0x12e <keypad_Get_Value+0x62>
 12a:	35 95       	asr	r19
 12c:	27 95       	ror	r18
 12e:	0a 94       	dec	r0
 130:	e2 f7       	brpl	.-8      	; 0x12a <keypad_Get_Value+0x5e>
 132:	20 fd       	sbrc	r18, 0
 134:	2a c0       	rjmp	.+84     	; 0x18a <keypad_Get_Value+0xbe>
 136:	83 30       	cpi	r24, 0x03	; 3
 138:	a9 f4       	brne	.+42     	; 0x164 <keypad_Get_Value+0x98>
 13a:	25 e0       	ldi	r18, 0x05	; 5
 13c:	30 e0       	ldi	r19, 0x00	; 0
 13e:	26 1b       	sub	r18, r22
 140:	37 0b       	sbc	r19, r23
 142:	66 e0       	ldi	r22, 0x06	; 6
 144:	70 e0       	ldi	r23, 0x00	; 0
 146:	fb 01       	movw	r30, r22
 148:	e4 1b       	sub	r30, r20
 14a:	f5 0b       	sbc	r31, r21
 14c:	af 01       	movw	r20, r30
 14e:	22 0f       	add	r18, r18
 150:	33 1f       	adc	r19, r19
 152:	22 0f       	add	r18, r18
 154:	33 1f       	adc	r19, r19
 156:	20 5a       	subi	r18, 0xA0	; 160
 158:	3f 4f       	sbci	r19, 0xFF	; 255
 15a:	f9 01       	movw	r30, r18
 15c:	e4 0f       	add	r30, r20
 15e:	f5 1f       	adc	r31, r21
 160:	e0 81       	ld	r30, Z
 162:	17 c0       	rjmp	.+46     	; 0x192 <keypad_Get_Value+0xc6>
 164:	25 e0       	ldi	r18, 0x05	; 5
 166:	30 e0       	ldi	r19, 0x00	; 0
 168:	26 1b       	sub	r18, r22
 16a:	37 0b       	sbc	r19, r23
 16c:	e7 e0       	ldi	r30, 0x07	; 7
 16e:	f0 e0       	ldi	r31, 0x00	; 0
 170:	df 01       	movw	r26, r30
 172:	a4 1b       	sub	r26, r20
 174:	b5 0b       	sbc	r27, r21
 176:	22 0f       	add	r18, r18
 178:	33 1f       	adc	r19, r19
 17a:	22 0f       	add	r18, r18
 17c:	33 1f       	adc	r19, r19
 17e:	20 5a       	subi	r18, 0xA0	; 160
 180:	3f 4f       	sbci	r19, 0xFF	; 255
 182:	f9 01       	movw	r30, r18
 184:	ea 0f       	add	r30, r26
 186:	fb 1f       	adc	r31, r27
 188:	e0 81       	ld	r30, Z
 18a:	81 50       	subi	r24, 0x01	; 1
 18c:	83 30       	cpi	r24, 0x03	; 3
 18e:	08 f0       	brcs	.+2      	; 0x192 <keypad_Get_Value+0xc6>
 190:	b3 cf       	rjmp	.-154    	; 0xf8 <keypad_Get_Value+0x2c>
 192:	91 50       	subi	r25, 0x01	; 1
 194:	92 30       	cpi	r25, 0x02	; 2
 196:	08 f0       	brcs	.+2      	; 0x19a <keypad_Get_Value+0xce>
 198:	9c cf       	rjmp	.-200    	; 0xd2 <keypad_Get_Value+0x6>
 19a:	ee 23       	and	r30, r30
 19c:	01 f1       	breq	.+64     	; 0x1de <keypad_Get_Value+0x112>
 19e:	e1 30       	cpi	r30, 0x01	; 1
 1a0:	01 f1       	breq	.+64     	; 0x1e2 <keypad_Get_Value+0x116>
 1a2:	e2 30       	cpi	r30, 0x02	; 2
 1a4:	01 f1       	breq	.+64     	; 0x1e6 <keypad_Get_Value+0x11a>
 1a6:	e3 30       	cpi	r30, 0x03	; 3
 1a8:	01 f1       	breq	.+64     	; 0x1ea <keypad_Get_Value+0x11e>
 1aa:	e4 30       	cpi	r30, 0x04	; 4
 1ac:	01 f1       	breq	.+64     	; 0x1ee <keypad_Get_Value+0x122>
 1ae:	e5 30       	cpi	r30, 0x05	; 5
 1b0:	01 f1       	breq	.+64     	; 0x1f2 <keypad_Get_Value+0x126>
 1b2:	e6 30       	cpi	r30, 0x06	; 6
 1b4:	01 f1       	breq	.+64     	; 0x1f6 <keypad_Get_Value+0x12a>
 1b6:	e7 30       	cpi	r30, 0x07	; 7
 1b8:	01 f1       	breq	.+64     	; 0x1fa <keypad_Get_Value+0x12e>
 1ba:	e8 30       	cpi	r30, 0x08	; 8
 1bc:	01 f1       	breq	.+64     	; 0x1fe <keypad_Get_Value+0x132>
 1be:	e9 30       	cpi	r30, 0x09	; 9
 1c0:	01 f1       	breq	.+64     	; 0x202 <keypad_Get_Value+0x136>
 1c2:	ea 30       	cpi	r30, 0x0A	; 10
 1c4:	01 f1       	breq	.+64     	; 0x206 <keypad_Get_Value+0x13a>
 1c6:	eb 30       	cpi	r30, 0x0B	; 11
 1c8:	01 f1       	breq	.+64     	; 0x20a <keypad_Get_Value+0x13e>
 1ca:	ec 30       	cpi	r30, 0x0C	; 12
 1cc:	01 f1       	breq	.+64     	; 0x20e <keypad_Get_Value+0x142>
 1ce:	ed 30       	cpi	r30, 0x0D	; 13
 1d0:	01 f1       	breq	.+64     	; 0x212 <keypad_Get_Value+0x146>
 1d2:	ee 30       	cpi	r30, 0x0E	; 14
 1d4:	01 f1       	breq	.+64     	; 0x216 <keypad_Get_Value+0x14a>
 1d6:	ef 30       	cpi	r30, 0x0F	; 15
 1d8:	01 f1       	breq	.+64     	; 0x21a <keypad_Get_Value+0x14e>
 1da:	80 e0       	ldi	r24, 0x00	; 0
 1dc:	08 95       	ret
 1de:	87 e3       	ldi	r24, 0x37	; 55
 1e0:	08 95       	ret
 1e2:	88 e3       	ldi	r24, 0x38	; 56
 1e4:	08 95       	ret
 1e6:	89 e3       	ldi	r24, 0x39	; 57
 1e8:	08 95       	ret
 1ea:	8f e2       	ldi	r24, 0x2F	; 47
 1ec:	08 95       	ret
 1ee:	84 e3       	ldi	r24, 0x34	; 52
 1f0:	08 95       	ret
 1f2:	85 e3       	ldi	r24, 0x35	; 53
 1f4:	08 95       	ret
 1f6:	86 e3       	ldi	r24, 0x36	; 54
 1f8:	08 95       	ret
 1fa:	8a e2       	ldi	r24, 0x2A	; 42
 1fc:	08 95       	ret
 1fe:	81 e3       	ldi	r24, 0x31	; 49
 200:	08 95       	ret
 202:	82 e3       	ldi	r24, 0x32	; 50
 204:	08 95       	ret
 206:	83 e3       	ldi	r24, 0x33	; 51
 208:	08 95       	ret
 20a:	8d e2       	ldi	r24, 0x2D	; 45
 20c:	08 95       	ret
 20e:	83 e4       	ldi	r24, 0x43	; 67
 210:	08 95       	ret
 212:	80 e3       	ldi	r24, 0x30	; 48
 214:	08 95       	ret
 216:	8d e3       	ldi	r24, 0x3D	; 61
 218:	08 95       	ret
 21a:	8b e2       	ldi	r24, 0x2B	; 43
 21c:	08 95       	ret

0000021e <LCD_Command>:
 21e:	98 b3       	in	r25, 0x18	; 24
 220:	98 7e       	andi	r25, 0xE8	; 232
 222:	98 bb       	out	0x18, r25	; 24
 224:	38 b3       	in	r19, 0x18	; 24
 226:	28 2f       	mov	r18, r24
 228:	22 95       	swap	r18
 22a:	2f 70       	andi	r18, 0x0F	; 15
 22c:	92 2f       	mov	r25, r18
 22e:	98 70       	andi	r25, 0x08	; 8
 230:	49 2f       	mov	r20, r25
 232:	50 e0       	ldi	r21, 0x00	; 0
 234:	44 0f       	add	r20, r20
 236:	55 1f       	adc	r21, r21
 238:	27 70       	andi	r18, 0x07	; 7
 23a:	42 2b       	or	r20, r18
 23c:	43 2b       	or	r20, r19
 23e:	48 bb       	out	0x18, r20	; 24
 240:	9b b3       	in	r25, 0x1b	; 27
 242:	97 7f       	andi	r25, 0xF7	; 247
 244:	9b bb       	out	0x1b, r25	; 27
 246:	9b b3       	in	r25, 0x1b	; 27
 248:	94 60       	ori	r25, 0x04	; 4
 24a:	9b bb       	out	0x1b, r25	; 27
 24c:	e9 ef       	ldi	r30, 0xF9	; 249
 24e:	f0 e0       	ldi	r31, 0x00	; 0
 250:	31 97       	sbiw	r30, 0x01	; 1
 252:	f1 f7       	brne	.-4      	; 0x250 <LCD_Command+0x32>
 254:	00 c0       	rjmp	.+0      	; 0x256 <LCD_Command+0x38>
 256:	00 00       	nop
 258:	9b b3       	in	r25, 0x1b	; 27
 25a:	9b 7f       	andi	r25, 0xFB	; 251
 25c:	9b bb       	out	0x1b, r25	; 27
 25e:	e3 ef       	ldi	r30, 0xF3	; 243
 260:	f1 e0       	ldi	r31, 0x01	; 1
 262:	31 97       	sbiw	r30, 0x01	; 1
 264:	f1 f7       	brne	.-4      	; 0x262 <LCD_Command+0x44>
 266:	00 c0       	rjmp	.+0      	; 0x268 <LCD_Command+0x4a>
 268:	00 00       	nop
 26a:	98 b3       	in	r25, 0x18	; 24
 26c:	98 7e       	andi	r25, 0xE8	; 232
 26e:	98 bb       	out	0x18, r25	; 24
 270:	48 b3       	in	r20, 0x18	; 24
 272:	98 2f       	mov	r25, r24
 274:	98 70       	andi	r25, 0x08	; 8
 276:	29 2f       	mov	r18, r25
 278:	30 e0       	ldi	r19, 0x00	; 0
 27a:	22 0f       	add	r18, r18
 27c:	33 1f       	adc	r19, r19
 27e:	87 70       	andi	r24, 0x07	; 7
 280:	28 2b       	or	r18, r24
 282:	24 2b       	or	r18, r20
 284:	28 bb       	out	0x18, r18	; 24
 286:	8b b3       	in	r24, 0x1b	; 27
 288:	84 60       	ori	r24, 0x04	; 4
 28a:	8b bb       	out	0x1b, r24	; 27
 28c:	89 ef       	ldi	r24, 0xF9	; 249
 28e:	90 e0       	ldi	r25, 0x00	; 0
 290:	01 97       	sbiw	r24, 0x01	; 1
 292:	f1 f7       	brne	.-4      	; 0x290 <LCD_Command+0x72>
 294:	00 c0       	rjmp	.+0      	; 0x296 <LCD_Command+0x78>
 296:	00 00       	nop
 298:	8b b3       	in	r24, 0x1b	; 27
 29a:	8b 7f       	andi	r24, 0xFB	; 251
 29c:	8b bb       	out	0x1b, r24	; 27
 29e:	e3 ef       	ldi	r30, 0xF3	; 243
 2a0:	f1 e0       	ldi	r31, 0x01	; 1
 2a2:	31 97       	sbiw	r30, 0x01	; 1
 2a4:	f1 f7       	brne	.-4      	; 0x2a2 <LCD_Command+0x84>
 2a6:	00 c0       	rjmp	.+0      	; 0x2a8 <LCD_Command+0x8a>
 2a8:	00 00       	nop
 2aa:	08 95       	ret

000002ac <LCD_Init>:
 2ac:	87 b3       	in	r24, 0x17	; 23
 2ae:	87 61       	ori	r24, 0x17	; 23
 2b0:	87 bb       	out	0x17, r24	; 23
 2b2:	8a b3       	in	r24, 0x1a	; 26
 2b4:	8c 60       	ori	r24, 0x0C	; 12
 2b6:	8a bb       	out	0x1a, r24	; 26
 2b8:	85 ea       	ldi	r24, 0xA5	; 165
 2ba:	9e e0       	ldi	r25, 0x0E	; 14
 2bc:	01 97       	sbiw	r24, 0x01	; 1
 2be:	f1 f7       	brne	.-4      	; 0x2bc <LCD_Init+0x10>
 2c0:	00 c0       	rjmp	.+0      	; 0x2c2 <LCD_Init+0x16>
 2c2:	00 00       	nop
 2c4:	82 e0       	ldi	r24, 0x02	; 2
 2c6:	90 e0       	ldi	r25, 0x00	; 0
 2c8:	0e 94 0f 01 	call	0x21e	; 0x21e <LCD_Command>
 2cc:	88 e2       	ldi	r24, 0x28	; 40
 2ce:	90 e0       	ldi	r25, 0x00	; 0
 2d0:	0e 94 0f 01 	call	0x21e	; 0x21e <LCD_Command>
 2d4:	8c e0       	ldi	r24, 0x0C	; 12
 2d6:	90 e0       	ldi	r25, 0x00	; 0
 2d8:	0e 94 0f 01 	call	0x21e	; 0x21e <LCD_Command>
 2dc:	86 e0       	ldi	r24, 0x06	; 6
 2de:	90 e0       	ldi	r25, 0x00	; 0
 2e0:	0e 94 0f 01 	call	0x21e	; 0x21e <LCD_Command>
 2e4:	81 e0       	ldi	r24, 0x01	; 1
 2e6:	90 e0       	ldi	r25, 0x00	; 0
 2e8:	0e 94 0f 01 	call	0x21e	; 0x21e <LCD_Command>
 2ec:	80 e8       	ldi	r24, 0x80	; 128
 2ee:	90 e0       	ldi	r25, 0x00	; 0
 2f0:	0e 94 0f 01 	call	0x21e	; 0x21e <LCD_Command>
 2f4:	08 95       	ret

000002f6 <LCD_Char>:
 2f6:	98 b3       	in	r25, 0x18	; 24
 2f8:	98 7e       	andi	r25, 0xE8	; 232
 2fa:	98 bb       	out	0x18, r25	; 24
 2fc:	38 b3       	in	r19, 0x18	; 24
 2fe:	28 2f       	mov	r18, r24
 300:	22 95       	swap	r18
 302:	2f 70       	andi	r18, 0x0F	; 15
 304:	92 2f       	mov	r25, r18
 306:	98 70       	andi	r25, 0x08	; 8
 308:	49 2f       	mov	r20, r25
 30a:	50 e0       	ldi	r21, 0x00	; 0
 30c:	44 0f       	add	r20, r20
 30e:	55 1f       	adc	r21, r21
 310:	27 70       	andi	r18, 0x07	; 7
 312:	42 2b       	or	r20, r18
 314:	43 2b       	or	r20, r19
 316:	48 bb       	out	0x18, r20	; 24
 318:	9b b3       	in	r25, 0x1b	; 27
 31a:	98 60       	ori	r25, 0x08	; 8
 31c:	9b bb       	out	0x1b, r25	; 27
 31e:	9b b3       	in	r25, 0x1b	; 27
 320:	94 60       	ori	r25, 0x04	; 4
 322:	9b bb       	out	0x1b, r25	; 27
 324:	e9 ef       	ldi	r30, 0xF9	; 249
 326:	f0 e0       	ldi	r31, 0x00	; 0
 328:	31 97       	sbiw	r30, 0x01	; 1
 32a:	f1 f7       	brne	.-4      	; 0x328 <LCD_Char+0x32>
 32c:	00 c0       	rjmp	.+0      	; 0x32e <LCD_Char+0x38>
 32e:	00 00       	nop
 330:	9b b3       	in	r25, 0x1b	; 27
 332:	9b 7f       	andi	r25, 0xFB	; 251
 334:	9b bb       	out	0x1b, r25	; 27
 336:	e7 ea       	ldi	r30, 0xA7	; 167
 338:	f1 e6       	ldi	r31, 0x61	; 97
 33a:	31 97       	sbiw	r30, 0x01	; 1
 33c:	f1 f7       	brne	.-4      	; 0x33a <LCD_Char+0x44>
 33e:	00 c0       	rjmp	.+0      	; 0x340 <LCD_Char+0x4a>
 340:	00 00       	nop
 342:	98 b3       	in	r25, 0x18	; 24
 344:	98 7e       	andi	r25, 0xE8	; 232
 346:	98 bb       	out	0x18, r25	; 24
 348:	48 b3       	in	r20, 0x18	; 24
 34a:	98 2f       	mov	r25, r24
 34c:	98 70       	andi	r25, 0x08	; 8
 34e:	29 2f       	mov	r18, r25
 350:	30 e0       	ldi	r19, 0x00	; 0
 352:	22 0f       	add	r18, r18
 354:	33 1f       	adc	r19, r19
 356:	87 70       	andi	r24, 0x07	; 7
 358:	28 2b       	or	r18, r24
 35a:	24 2b       	or	r18, r20
 35c:	28 bb       	out	0x18, r18	; 24
 35e:	8b b3       	in	r24, 0x1b	; 27
 360:	84 60       	ori	r24, 0x04	; 4
 362:	8b bb       	out	0x1b, r24	; 27
 364:	89 ef       	ldi	r24, 0xF9	; 249
 366:	90 e0       	ldi	r25, 0x00	; 0
 368:	01 97       	sbiw	r24, 0x01	; 1
 36a:	f1 f7       	brne	.-4      	; 0x368 <LCD_Char+0x72>
 36c:	00 c0       	rjmp	.+0      	; 0x36e <LCD_Char+0x78>
 36e:	00 00       	nop
 370:	8b b3       	in	r24, 0x1b	; 27
 372:	8b 7f       	andi	r24, 0xFB	; 251
 374:	8b bb       	out	0x1b, r24	; 27
 376:	e7 ea       	ldi	r30, 0xA7	; 167
 378:	f1 e6       	ldi	r31, 0x61	; 97
 37a:	31 97       	sbiw	r30, 0x01	; 1
 37c:	f1 f7       	brne	.-4      	; 0x37a <LCD_Char+0x84>
 37e:	00 c0       	rjmp	.+0      	; 0x380 <LCD_Char+0x8a>
 380:	00 00       	nop
 382:	08 95       	ret

00000384 <main>:
#include "Keypad.h"
#include "LCD.h"
#include "std_types.h"
int main(void)
{
	LCD_Init();
 384:	0e 94 56 01 	call	0x2ac	; 0x2ac <LCD_Init>
	keypad_init();
 388:	0e 94 41 00 	call	0x82	; 0x82 <keypad_init>
	
    while (1) 
    {
		uint8 key;
		key = keypad_Get_Value();
 38c:	0e 94 66 00 	call	0xcc	; 0xcc <keypad_Get_Value>
		LCD_Char(key);
 390:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <LCD_Char>
 394:	fb cf       	rjmp	.-10     	; 0x38c <main+0x8>

00000396 <_exit>:
 396:	f8 94       	cli

00000398 <__stop_program>:
 398:	ff cf       	rjmp	.-2      	; 0x398 <__stop_program>
